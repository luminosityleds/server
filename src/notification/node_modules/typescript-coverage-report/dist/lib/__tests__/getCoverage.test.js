"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
exports.__esModule = true;
var type_coverage_core_1 = __importDefault(require("type-coverage-core"));
var getCoverage_1 = __importDefault(require("../getCoverage"));
describe("getCoverage function", function () {
    afterEach(function () {
        jest.clearAllMocks();
    });
    it("returns calculated data from type-coverage-core", function (done) { return __awaiter(void 0, void 0, void 0, function () {
        var data;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, (0, getCoverage_1["default"])()];
                case 1:
                    data = _a.sent();
                    expect(data).toMatchSnapshot();
                    done();
                    return [2 /*return*/];
            }
        });
    }); });
    it("accepts a tsProjectFile option", function (done) { return __awaiter(void 0, void 0, void 0, function () {
        var data;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    type_coverage_core_1["default"].lint = jest.fn().mockImplementation(type_coverage_core_1["default"].lint);
                    return [4 /*yield*/, (0, getCoverage_1["default"])({
                            tsProjectFile: "./app/tsconfig.json"
                        })];
                case 1:
                    data = _a.sent();
                    expect(data).toMatchSnapshot();
                    // @ts-expect-error
                    expect(type_coverage_core_1["default"].lint.mock.calls).toMatchSnapshot();
                    done();
                    return [2 /*return*/];
            }
        });
    }); });
    it("defaults to root project when tsProjectFile is not passed", function (done) { return __awaiter(void 0, void 0, void 0, function () {
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    type_coverage_core_1["default"].lint = jest.fn().mockImplementation(type_coverage_core_1["default"].lint);
                    return [4 /*yield*/, (0, getCoverage_1["default"])()];
                case 1:
                    _a.sent();
                    // @ts-expect-error
                    expect(type_coverage_core_1["default"].lint.mock.calls).toMatchSnapshot();
                    done();
                    return [2 /*return*/];
            }
        });
    }); });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0Q292ZXJhZ2UudGVzdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9saWIvX190ZXN0c19fL2dldENvdmVyYWdlLnRlc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSwwRUFBa0Q7QUFDbEQsK0RBQXlDO0FBRXpDLFFBQVEsQ0FBQyxzQkFBc0IsRUFBRTtJQUMvQixTQUFTLENBQUM7UUFDUixJQUFJLENBQUMsYUFBYSxFQUFFLENBQUM7SUFDdkIsQ0FBQyxDQUFDLENBQUM7SUFFSCxFQUFFLENBQUMsaURBQWlELEVBQUUsVUFBTyxJQUFJOzs7O3dCQUNsRCxxQkFBTSxJQUFBLHdCQUFXLEdBQUUsRUFBQTs7b0JBQTFCLElBQUksR0FBRyxTQUFtQjtvQkFFaEMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLGVBQWUsRUFBRSxDQUFDO29CQUUvQixJQUFJLEVBQUUsQ0FBQzs7OztTQUNSLENBQUMsQ0FBQztJQUVILEVBQUUsQ0FBQyxnQ0FBZ0MsRUFBRSxVQUFPLElBQUk7Ozs7O29CQUM5QywrQkFBZ0IsQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLEVBQUUsRUFBRSxDQUFDLGtCQUFrQixDQUFDLCtCQUFnQixDQUFDLElBQUksQ0FBQyxDQUFDO29CQUUvRCxxQkFBTSxJQUFBLHdCQUFXLEVBQUM7NEJBQzdCLGFBQWEsRUFBRSxxQkFBcUI7eUJBQ3JDLENBQUMsRUFBQTs7b0JBRkksSUFBSSxHQUFHLFNBRVg7b0JBRUYsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLGVBQWUsRUFBRSxDQUFDO29CQUMvQixtQkFBbUI7b0JBQ25CLE1BQU0sQ0FBQywrQkFBZ0IsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLGVBQWUsRUFBRSxDQUFDO29CQUMzRCxJQUFJLEVBQUUsQ0FBQzs7OztTQUNSLENBQUMsQ0FBQztJQUVILEVBQUUsQ0FBQywyREFBMkQsRUFBRSxVQUFPLElBQUk7Ozs7b0JBQ3pFLCtCQUFnQixDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsRUFBRSxFQUFFLENBQUMsa0JBQWtCLENBQUMsK0JBQWdCLENBQUMsSUFBSSxDQUFDLENBQUM7b0JBRTVFLHFCQUFNLElBQUEsd0JBQVcsR0FBRSxFQUFBOztvQkFBbkIsU0FBbUIsQ0FBQztvQkFFcEIsbUJBQW1CO29CQUNuQixNQUFNLENBQUMsK0JBQWdCLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxlQUFlLEVBQUUsQ0FBQztvQkFDM0QsSUFBSSxFQUFFLENBQUM7Ozs7U0FDUixDQUFDLENBQUM7QUFDTCxDQUFDLENBQUMsQ0FBQyJ9